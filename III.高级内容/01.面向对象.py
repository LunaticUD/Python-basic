#  面向过程的编程
#  就是一步一步的实现，自顶向下，逐步细化的一种思想
#  程序的主体是函数，一个函数就是一个封装起来的模块，可以实现特定的功能，
#  程序的各个子步骤往往就是通过相关的函数来完成的，从而实现代码的重用和模块化的编程
#  面向对象的编程
#  所谓的面向对象，就是在编程的时候尽可能地去模拟现实中的世界
#  任何一个操作或业务逻辑的实现来完成，而实体也就是动作的支配着，没有实体，也就没有动作发生
#  以世界为参考对象，使得与真实的业务逻辑保持一致

# 面向对象：而这个实体也就是面向的对象支配着一系列的动作
# 开发的过程中首先应该想到的是由什么样的主题实现什么样的功能，
# 再把主题的功能和属性进行封装。最后再去实现各个实体的各个功能
# 不仅仅是对简单的功能的封装，而是对整个主体的封装在使用过程中，先得到相应主体
# 再用主体实现相关的功能。

# 区别：
# 都可以实现代码的重用和模块化编程，面向对象的模块化更深，数据封闭的更安全
# 面向对象更贴近于生更易解决复杂的业务逻辑
# 面向对象比面向过程更复杂，但是从维护和扩展的方面看，面向对象比面向过程更简单
# 面向过程的执行效率要比面向过程的要高

# 面向对象称之为OOP
# OOA为面向对象的分析
# OOD为面向对象的设计
# OOA > OOD > OOP
# 这个实体就是对象，而每一个实体都有动作也就是方法，本质的特性也就是属性
# 一个对象就是由属性和方法来组成的


# 类也就是产生对象的主体
# 在python中要想拥有一个对象，就要先定义一个类，并在一定程度规划和限制对象的属性与方法
# @类也就是具有相同的属性和动作的一组实体的集合@

